import { Divider, Input, InputAdornment, Typography } from "@material-ui/core";
import Avatar from "@material-ui/core/Avatar";
import CssBaseline from "@material-ui/core/CssBaseline";
import List from "@material-ui/core/List";
import ListItem from "@material-ui/core/ListItem";
import ListItemAvatar from "@material-ui/core/ListItemAvatar";
import ListItemText from "@material-ui/core/ListItemText";
import Paper from "@material-ui/core/Paper";
import { makeStyles } from "@material-ui/core/styles";
import SearchIcon from '@material-ui/icons/Search';
import React from "react";

const messages = [
  {
    id: 1,
    primary: "Alexis Boggan",
    secondary:
      "I'll be in the neighbourhood this week. Let's grab a bite to eat",
    person: "https://randomuser.me/api/portraits/thumb/men/31.jpg",
    date: "Hoy",
  },
  {
    id: 2,
    primary: "Alejandra Cagnoni",
    secondary: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
    person: "https://randomuser.me/api/portraits/thumb/men/32.jpg",
    date: "Ayer",
  },
  {
    id: 3,
    primary: "Agostina Castello",
    secondary:
      "I am try out this new BBQ recipe, I think this might be amazing",
    person: "https://randomuser.me/api/portraits/thumb/men/33.jpg",
    date: "2 de Mayo",
  },
  {
    id: 4,
    primary: "Mario Sanches",
    secondary: "I have the tickets to the ReactConf for this year.",
    person: "https://randomuser.me/api/portraits/thumb/men/34.jpg",
    date: "19 de Abril",
  },
  {
    id: 5,
    primary: "Mario Bros",
    secondary:
      "My appointment for the doctor was rescheduled for next Saturday.",
    person: "https://randomuser.me/api/portraits/thumb/men/36.jpg",
    date: "19 de Abril",
  },
  {
    id: 6,
    primary: "Romina Sarasa",
    secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
    person: "https://randomuser.me/api/portraits/thumb/men/38.jpg",
    date: "25 de Marzo",
  },
  {
    id: 7,
    primary: "Roberto Parrado",
    secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
    person: "https://randomuser.me/api/portraits/thumb/men/29.jpg",
    date: "25 de Marzo",
  },
];

const useStyles = makeStyles((theme) => ({
  text: {
    padding: theme.spacing(2, 2, 0),
  },
  paper: {
    height: "70vh",
    width: "99%",
    marginLeft: 1,
    paddingBottom: 65,
  },
  list: {
    marginBottom: theme.spacing(2),
    maxHeight: "100%",
    overflow: "auto",
    scrollbarColor: ` ${theme.palette.primary.main} white`,
  },
  listItem: {
    textOverflow: 'elipsis',
  },
  subheader: {
    backgroundColor: theme.palette.background.paper,
  },
  appBar: {
    top: "auto",
    bottom: 0,
  },
  grow: {
    flexGrow: 1,
  },
  fabButton: {
    position: "absolute",
    zIndex: 1,
    top: -30,
    left: 0,
    right: 0,
    margin: "0 auto",
  },
  messagesContainer: {
    paddingTop: 15,
  },
  searchInput: {
    paddingLeft: 15,
  },
  timeStamp: {
    position: 'absolute',
    top: 3,
    right: 10,
    fontSize: 11,
    color: '#757070',
  },
  messageName: {
    fontSize: 15,
    fontWeight: 'bold',
  },
  messageText: {
    fontSize: 13,
  },
}));



export default function Messages() {
  const classes = useStyles();

  const addEllipsis = (text) => {
    let newText = text;
    if (text.length > 60 ) {
      newText = text.substring(0,54)
    }
    return newText;
  }


  function MessageTimeStamp(props) {
    return (
      <div className={classes.timeStamp}>
        {props.date}
      </div>
    )
  }

  return (
    <React.Fragment>
      <CssBaseline />
      <Paper square className={classes.paper}>
        <div className={classes.messagesContainer}>
          <Input
            id="searchInput"
            placeholder="Buscar mensajes"
            fullWidth={true}
            className={classes.searchInput}
            startAdornment={
              <InputAdornment position="start">
                <SearchIcon />
              </InputAdornment>
            }
          />
        </div>
       

        <List className={classes.list}>
          <Divider/>
          {messages.map(({ id, primary, secondary, person, date }) => (

            <React.Fragment key={id}>
              <ListItem button className={classes.listItem}>
                <ListItemAvatar>
                  <Avatar alt="Profile Picture" src={person} />
                </ListItemAvatar>
                <ListItemText 
                  disableTypography
                  primary={ <Typography className={classes.messageName}> {primary} </Typography> } 
                  secondary={<Typography className={classes.messageText}> {addEllipsis(secondary)} </Typography>}  
                />
                <MessageTimeStamp date={date}/>
              </ListItem>
              <Divider/>
            </React.Fragment>
          ))}
        </List>
      </Paper>
    </React.Fragment>
  );
}
